package com.example.stockwatch;

import android.content.DialogInterface;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.InputFilter;
import android.text.InputType;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.EditText;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;

public class MainActivity extends AppCompatActivity
{

    private static final String TAG = "MainActivity";
    public RecyclerView recyclerView;
    private SwipeRefreshLayout swiper;

    private StockAdapter stockAdapter;
    List<Stock> stockList = new ArrayList<Stock>();
    HashMap<String, String> initialMap;
    private DatabaseHandler databaseHandler;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        Log.d(TAG, "onCreate: ");
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor("#000000")));

        doAsyncLoadInitialData();

        //stockList.add(new Stock("Test", "Amazon", 12.30, 0.50, 2.4));
        recyclerView = findViewById(R.id.recyclerView);
        stockAdapter = new StockAdapter(stockList, this);
        Collections.sort(stockList, Collections.<Stock>reverseOrder());
        recyclerView.setAdapter(stockAdapter);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        databaseHandler = new DatabaseHandler(this);

        swiper = (SwipeRefreshLayout)findViewById(R.id.swipeRefreshLayout);
        swiper.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                refreshData();
                //Set this to false else when the view is refreshed even if its task its done it shows the refreshing symbol
                swiper.setRefreshing(false);
            }
        });
    }


    //This method will fetch new data by service call.
    private void refreshData()
    {
        //ArrayList<Stock> list = databaseHandler.loadStocks();
        //list.addAll(stockList);
        //stockList.clear();
        Log.d(TAG, "refreshData: stockList " + stockList);
        for(Stock st:stockList)
        {
        